// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	msg "github.com/kgmedia-data/gaia/pkg/msg"
	mock "github.com/stretchr/testify/mock"
)

// IProcessor is an autogenerated mock type for the IProcessor type
type IProcessor[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: message
func (_m *IProcessor[T]) Execute(message msg.Message[T]) error {
	ret := _m.Called(message)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(msg.Message[T]) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIProcessor creates a new instance of IProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIProcessor[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *IProcessor[T] {
	mock := &IProcessor[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
